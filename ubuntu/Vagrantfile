box_version = "20210623.0.0"
ssh_key_name = 'id_rsa'

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_version = box_version
  config.vm.box_check_update = true

  required_plugins = %w( vagrant-vbguest )
  _retry = false
  required_plugins.each do |plugin|
    unless Vagrant.has_plugin? plugin
      system "vagrant plugin install #{plugin}"
      _retry=true
    end
  end

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.name = "Ubuntu #{box_version}"
    vb.memory = 8192
    vb.cpus = 6
    vb.check_guest_additions = true
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    #vb.customize ["modifyvm", :id, "--vrde", "off"]
    #vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    #vb.customize ["setextradata", :id, "CustomVideoMode1", "1680x1050x32"]
  end

  config.vm.network "forwarded_port",
    guest: 22,
    host: 2222

  if Vagrant::Util::Platform.windows? then
    config.vm.provision "file", source: "#{ENV['HOME']}\\.ssh\\#{ssh_key_name}", destination: "/tmp/#{ssh_key_name}", run: "always"
    config.vm.provision "file", source: "#{ENV['HOME']}\\.ssh\\#{ssh_key_name}.pub", destination: "/tmp/#{ssh_key_name}.pub", run: "always"
  else
    config.vm.provision "file", source: "#{ENV['HOME']}//.ssh//#{ssh_key_name}", destination: "/tmp/#{ssh_key_name}", run: "always"
    config.vm.provision "file", source: "#{ENV['HOME']}//.ssh//#{ssh_key_name}.pub", destination: "/tmp/#{ssh_key_name}.pub", run: "always"
  end

  # SSH access
  config.vm.provision :shell, run: "always", inline: "mv /tmp/#{ssh_key_name}* /home/vagrant/.ssh"
  config.vm.provision :shell, run: "always", inline: "chmod 0400 /home/vagrant/.ssh/#{ssh_key_name}"
  # TODO avoid duplicates
  config.vm.provision :shell, run: "always", inline: "cat /home/vagrant/.ssh/#{ssh_key_name}.pub \>\> /home/vagrant/.ssh/authorized_keys"

  # Currently "ubuntu/bionic64" on VirtualBox requires `type: "virtualbox"`
  # to make synced folder works.
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox", automount: true

  # Add Google Chrome repository
  config.vm.provision :shell, inline: "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub|sudo apt-key add -"
  config.vm.provision :shell, inline: "sudo sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google.list'"

  # Update repositories
  config.vm.provision :shell, inline: "sudo apt update -y"

  # Upgrade installed packages
  config.vm.provision :shell, inline: "sudo apt upgrade -y"

  # Add desktop environment
  config.vm.provision :shell, inline: "sudo apt install -y --no-install-recommends ubuntu-desktop"
  config.vm.provision :shell, inline: "sudo apt install -y --no-install-recommends virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
  # Add `vagrant` to Administrator
  config.vm.provision :shell, inline: "sudo usermod -a -G sudo vagrant"

  # Add Google Chrome
  config.vm.provision :shell, inline: "sudo apt install -y google-chrome-stable"

  # Add Chromium
  config.vm.provision :shell, inline: "sudo apt install -y chromium-browser"

  # Add Firefox
  config.vm.provision :shell, inline: "sudo apt install -y firefox"

  # Restart
  config.vm.provision :shell, inline: "sudo shutdown -r now"

  # Install snapd
  config.vm.provision :shell, run: "always", inline: "sudo apt install snapd"
  config.vm.provision :shell, run: "always", inline: "sudo snap install core"

  # Install code
  config.vm.provision :shell, run: "always", inline: "sudo snap install --classic code"

  # Install code extensions
  config.vm.provision :shell, run: "always", inline: "code --install-extension golang.go"
  config.vm.provision :shell, run: "always", inline: "code --install-extension ms-python.python"
  config.vm.provision :shell, run: "always", inline: "code --install-extension 4ops.terraform"
end